#[test]
fn {name}() {{
    let code = include_str!("{path}");

    let lexer = vunk_lexer::lexer();
    let (tokens, errs) = lexer.parse_recovery(code);
    assert!(
        errs.is_empty(),
        "Tokens: {{:?}}, Errors: {{}}",
        tokens,
        errs.into_iter()
            .map(|e| {{
                let mut linenr = 0;
                let mut chr = e.span().start;

                for line in code.lines() {{
                    linenr += 1;
                    if chr > line.chars().count() {{
                        chr -= line.chars().count();
                    }} else {{
                        break;
                    }}
                }}

                format!("[{{}}: {{}}]: {{}}",
                    linenr,
                    chr,
                    e)
            }})
            .collect::<Vec<_>>()
            .join("\n"),
    );
}}
